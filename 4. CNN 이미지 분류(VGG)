{"cells":[{"cell_type":"markdown","metadata":{"id":"K5p6p7m2Nzl7"},"source":["## 데이터 전처리"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"executionInfo":{"elapsed":3310,"status":"ok","timestamp":1712172197931,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"gHzZen9EBSI2","outputId":"364509e9-2b6a-44b4-e6f3-a5e5cbd61c51"},"outputs":[{"name":"stdout","output_type":"stream","text":["Files already downloaded and verified\n","Files already downloaded and verified\n"]},{"data":{"text/html":["\u003cdiv style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"\u003e\u003cstyle\u003e\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    \u003c/style\u003e\n","    \u003cpre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"\u003e\u003cb\u003ematplotlib.pyplot.show\u003c/b\u003e\u003cbr/\u003edef show(*args, **kwargs)\u003c/pre\u003e\u003cpre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"\u003e\u003ca class=\"filepath\" style=\"display:none\" href=\"#\"\u003e/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u003c/a\u003eDisplay all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don\u0026#x27;t have to call it\n","explicitly there.\u003c/pre\u003e\n","      \u003cscript\u003e\n","      if (google.colab.kernel.accessAllowed \u0026\u0026 google.colab.files \u0026\u0026 google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) =\u003e {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) =\u003e {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      \u003c/script\u003e\n","      \u003c/div\u003e"],"text/plain":["\u003cfunction matplotlib.pyplot.show(close=None, block=None)\u003e"]},"execution_count":6,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 640x480 with 9 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","\n","from torchvision.datasets.cifar import CIFAR10\n","from torchvision.transforms import ToTensor # 이미지를 파이토치 텐서로 변환\n","\n","# CIFAR-10 데이터셋 불러오기\n","training_data = CIFAR10(root='./', train=True, download=True, transform=ToTensor())\n","test_data = CIFAR10(root='./', train=False, download=True, transform=ToTensor())\n","\n","for i in range(9):\n","    plt.subplot(3,3,i+1)\n","    plt.imshow(training_data.data[i])\n","plt.show"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1712169173036,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"e-66RAIGPBP5","outputId":"9ed419c4-526f-4b3f-eaf2-d59680787405"},"outputs":[{"name":"stdout","output_type":"stream","text":["50000\n","10000\n"]}],"source":["print(len(training_data))\n","print(len(test_data))"]},{"cell_type":"markdown","metadata":{"id":"X2OXBTasO9cl"},"source":["## 데이터 증강"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"executionInfo":{"elapsed":3830,"status":"ok","timestamp":1712169493977,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"zKLpk8VjOsqv","outputId":"61674e87-9b91-47b7-fc08-9edf93d4dfdf"},"outputs":[{"name":"stdout","output_type":"stream","text":["Files already downloaded and verified\n","Files already downloaded and verified\n"]},{"data":{"text/html":["\u003cdiv style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"\u003e\u003cstyle\u003e\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    \u003c/style\u003e\n","    \u003cpre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"\u003e\u003cb\u003ematplotlib.pyplot.show\u003c/b\u003e\u003cbr/\u003edef show(*args, **kwargs)\u003c/pre\u003e\u003cpre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"\u003e\u003ca class=\"filepath\" style=\"display:none\" href=\"#\"\u003e/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u003c/a\u003eDisplay all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don\u0026#x27;t have to call it\n","explicitly there.\u003c/pre\u003e\n","      \u003cscript\u003e\n","      if (google.colab.kernel.accessAllowed \u0026\u0026 google.colab.files \u0026\u0026 google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) =\u003e {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) =\u003e {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      \u003c/script\u003e\n","      \u003c/div\u003e"],"text/plain":["\u003cfunction matplotlib.pyplot.show(close=None, block=None)\u003e"]},"execution_count":6,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 640x480 with 9 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","import torchvision.transforms as T\n","\n","from torchvision.datasets.cifar import CIFAR10\n","from torchvision.transforms import Compose\n","from torchvision.transforms import RandomHorizontalFlip, RandomCrop\n","\n","transforms = Compose([ # 데이터 전처리\n","    T.ToPILImage(),\n","    RandomCrop((32,32), padding=4), # 랜덤으로 이미지 일부 제거 후 패딩\n","    RandomHorizontalFlip(p=0.5), # y축 기준으로 대칭\n","])\n","\n","training_data = CIFAR10(root='./', train=True, download=True, transform=transforms)\n","test_data = CIFAR10(root='./', train=False, download=True, transform=transforms)\n","\n","for i in range(9):\n","    plt.subplot(3,3,i+1)\n","    plt.imshow(transforms(training_data.data[i]))\n","plt.show"]},{"cell_type":"markdown","metadata":{"id":"L-8UVi-BQzSo"},"source":["## 이미지 정규화"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13668,"status":"ok","timestamp":1712170110704,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"dR2kI0v4Rffk","outputId":"b5bad682-e9b7-447f-bc23-fd133a16ebca"},"outputs":[{"name":"stdout","output_type":"stream","text":["Files already downloaded and verified\n","0.49139968 0.48215827 0.44653124\n","0.24703233 0.24348505 0.26158768\n"]}],"source":["# CIFAR10 데이터셋의 평균과 표준편차 구하기\n","\n","import torch\n","\n","training_data = CIFAR10(root='./', train=True, download=True, transform=ToTensor())\n","\n","# item[0]은 이미지, item[1]은 정답 테이블\n","imgs = [item[0] for item in training_data]\n","\n","# imgs를 하나로 합침\n","imgs = torch.stack(imgs, dim=0).numpy()\n","\n","# rgb 각 평균\n","mean_r = imgs[:,0,:,:].mean()\n","mean_g = imgs[:,1,:,:].mean()\n","mean_b = imgs[:,2,:,:].mean()\n","print(mean_r, mean_g, mean_b)\n","\n","# rgb 각 표준편차\n","std_r = imgs[:,0,:,:].std()\n","std_g = imgs[:,1,:,:].std()\n","std_b = imgs[:,2,:,:].std()\n","print(std_r, std_g, std_b)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":673},"executionInfo":{"elapsed":25326,"status":"ok","timestamp":1712172176763,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"l-4mPPtLOsnb","outputId":"cf606a7f-0a63-4e51-af72-567faa7df3bc"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./cifar-10-python.tar.gz\n"]},{"name":"stderr","output_type":"stream","text":["100%|██████████| 170498071/170498071 [00:11\u003c00:00, 15485394.93it/s]\n"]},{"name":"stdout","output_type":"stream","text":["Extracting ./cifar-10-python.tar.gz to ./\n","Files already downloaded and verified\n"]},{"data":{"text/html":["\u003cdiv style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"\u003e\u003cstyle\u003e\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    \u003c/style\u003e\n","    \u003cpre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"\u003e\u003cb\u003ematplotlib.pyplot.show\u003c/b\u003e\u003cbr/\u003edef show(*args, **kwargs)\u003c/pre\u003e\u003cpre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"\u003e\u003ca class=\"filepath\" style=\"display:none\" href=\"#\"\u003e/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py\u003c/a\u003eDisplay all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don\u0026#x27;t have to call it\n","explicitly there.\u003c/pre\u003e\n","      \u003cscript\u003e\n","      if (google.colab.kernel.accessAllowed \u0026\u0026 google.colab.files \u0026\u0026 google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) =\u003e {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) =\u003e {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      \u003c/script\u003e\n","      \u003c/div\u003e"],"text/plain":["\u003cfunction matplotlib.pyplot.show(close=None, block=None)\u003e"]},"execution_count":4,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 640x480 with 9 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","import torchvision.transforms as T\n","\n","from torchvision.datasets.cifar import CIFAR10\n","from torchvision.transforms import Compose\n","from torchvision.transforms import RandomHorizontalFlip, RandomCrop, Normalize\n","\n","transforms = Compose([\n","    T.ToPILImage(),\n","    RandomCrop((32,32), padding=4),\n","    RandomHorizontalFlip(p=0.5),\n","    T.ToTensor(),\n","\n","    # 데이터 정규화\n","    Normalize(mean=(0.4914,0.4822,0.4465), std=(0.247,0.243,0.261)),\n","    T.ToPILImage()\n","])\n","\n","training_data = CIFAR10(root='./', train=True, download=True, transform=transforms)\n","test_data = CIFAR10(root='./', train=False, download=True, transform=transforms)\n","\n","for i in range(9):\n","    plt.subplot(3,3,i+1)\n","    plt.imshow(transforms(training_data.data[i]))\n","plt.show"]},{"cell_type":"markdown","metadata":{"id":"XOWdKW5oS0zH"},"source":["## CNN으로 이미지 분류하기"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":4509,"status":"ok","timestamp":1712172141415,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"vrFuhDxzOslR"},"outputs":[],"source":["# VGG 기본 블록 정의\n","import torch\n","import torch.nn as nn\n","\n","# 기본 블락 정의\n","class BasicBlock(nn.Module):\n","    # 기본 블록을 구성하는 층 정의\n","    def __init__(self, in_channels, out_channels, hidden_dim): # 모듈의 초기화 담당\n","        # nn.Module 클래스의 요소 상속\n","        super(BasicBlock, self).__init__()\n","        # 합성곱층 정의\n","        self.conv1 = nn.Conv2d(in_channels, hidden_dim, kernel_size=3, padding=1)\n","        self.conv2 = nn.Conv2d(hidden_dim, out_channels, kernel_size=3, padding=1)\n","        self.relu = nn.ReLU()\n","        # 맥스풀링 정의\n","        self.pool = nn.MaxPool2d(kernel_size=2, stride=2)\n","\n","    # 기본 블록의 순전파 정의\n","    def forward(self,x):\n","        x = self.conv1(x)\n","        x = self.relu(x)\n","        x = self.conv2(x)\n","        x = self.relu(x)\n","        x = self.pool(x)\n","\n","        return x\n"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":429,"status":"ok","timestamp":1712172247109,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"Xi_K998IOsi7"},"outputs":[],"source":["# VGG 모델 정의\n","class CNN(nn.Module):\n","    def __init__(self, num_classes): # num_classes는 클래스 개수\n","        super(CNN, self).__init__()\n","\n","        # 합성곱 기본 블록 정의\n","        self.block1 = BasicBlock(in_channels=3, out_channels=32, hidden_dim=16)\n","        self.block2 = BasicBlock(in_channels=32, out_channels=128, hidden_dim=64)\n","        self.block3 = BasicBlock(in_channels=128, out_channels=256, hidden_dim=128)\n","\n","        # 분류기 정의\n","        self.fc1 = nn.Linear(in_features=4096, out_features=2048)\n","        self.fc2 = nn.Linear(in_features=2048, out_features=256)\n","        self.fc3 = nn.Linear(in_features=256, out_features=num_classes)\n","\n","        # 분류기의 활성화 함수\n","        self.relu = nn.ReLU()\n","\n","    def forward(self, x):\n","        x = self.block1(x)\n","        x = self.block2(x)\n","        x = self.block3(x) # 출력 모양 : (-1,256,4,4)\n","        x = torch.flatten(x, start_dim=1) # 2차원 특징 맵을 1차원으로\n","\n","        x = self.fc1(x)\n","        x = self.relu(x)\n","        x = self.fc2(x)\n","        x = self.relu(x)\n","        x = self.fc3(x)\n","\n","        return x\n"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2203,"status":"ok","timestamp":1712172250842,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"tfjwfaZpZMwM","outputId":"c339252d-3bf3-4154-c5ff-cce9080c524d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Files already downloaded and verified\n","Files already downloaded and verified\n"]},{"data":{"text/plain":["CNN(\n","  (block1): BasicBlock(\n","    (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (conv2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (relu): ReLU()\n","    (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  )\n","  (block2): BasicBlock(\n","    (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (relu): ReLU()\n","    (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  )\n","  (block3): BasicBlock(\n","    (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (conv2): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (relu): ReLU()\n","    (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  )\n","  (fc1): Linear(in_features=4096, out_features=2048, bias=True)\n","  (fc2): Linear(in_features=2048, out_features=256, bias=True)\n","  (fc3): Linear(in_features=256, out_features=10, bias=True)\n","  (relu): ReLU()\n",")"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["# 모델 학습\n","\n","from torch.utils.data.dataloader import DataLoader\n","\n","from torch.optim.adam import Adam\n","\n","transforms = Compose([\n","    RandomCrop((32,32),padding=4),\n","    RandomHorizontalFlip(p=0.5),\n","    ToTensor(), # 텐서로 변환\n","    Normalize(mean=(0.4914,0.4822,0.4465), std=(0.247,0.243,0.261))\n","])\n","\n","training_data = CIFAR10(root='./', train=True, download=True, transform=transforms)\n","test_data = CIFAR10(root='./', train=False, download=True, transform=transforms)\n","\n","train_loader = DataLoader(training_data, batch_size=32, shuffle=True)\n","test_loader = DataLoader(test_data, batch_size=32, shuffle=False)\n","\n","device='cuda' if torch.cuda.is_available() else 'cup'\n","\n","# 모델 정의\n","model = CNN(num_classes=10)\n","# 모델을 device로 보냄\n","model.to(device)"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":837,"status":"ok","timestamp":1712172757154,"user":{"displayName":"채민지","userId":"08298446370124931959"},"user_tz":-540},"id":"90rRq8YpctUU","outputId":"a2c702ed-0291-4f39-da03-410c68385fd3"},"outputs":[{"data":{"text/plain":["True"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["torch.cuda.is_available()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"KEKZ0qkoOsgr"},"outputs":[{"name":"stdout","output_type":"stream","text":["epoch 1 loss:0.43129488825798035\n","epoch 10 loss:0.22616848349571228\n","epoch 20 loss:0.3546796441078186\n","epoch 30 loss:0.32578036189079285\n","epoch 40 loss:0.14003711938858032\n"]},{"ename":"KeyboardInterrupt","evalue":"","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-12-cb997c38923c\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 7\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mepoch\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 8\u001b[0;31m     \u001b[0;32mfor\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtrain_loader\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m         \u001b[0moptim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzero_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    629\u001b[0m                 \u001b[0;31m# TODO(https://github.com/pytorch/pytorch/issues/76750)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    630\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 631\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    632\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_yielded\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_DatasetKind\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIterable\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_next_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    673\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    674\u001b[0m         \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 675\u001b[0;31m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_fetcher\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfetch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    676\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pin_memory\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    677\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pin_memory_device\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/_utils/fetch.py\u001b[0m in \u001b[0;36mfetch\u001b[0;34m(self, possibly_batched_index)\u001b[0m\n\u001b[1;32m     49\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getitems__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 51\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0midx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/utils/data/_utils/fetch.py\u001b[0m in \u001b[0;36m\u003clistcomp\u003e\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     49\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getitems__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 51\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0midx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torchvision/datasets/cifar.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, index)\u001b[0m\n\u001b[1;32m    113\u001b[0m         \u001b[0;31m# doing this so that it is consistent with all other datasets\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    114\u001b[0m         \u001b[0;31m# to return a PIL Image\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 115\u001b[0;31m         \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfromarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    116\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    117\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/PIL/Image.py\u001b[0m in \u001b[0;36mfromarray\u001b[0;34m(obj, mode)\u001b[0m\n\u001b[1;32m   3097\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mstrides\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3098\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"tobytes\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 3099\u001b[0;31m             \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtobytes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3100\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3101\u001b[0m             \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtostring\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["# 학습 루프와 최적화, 학습률 정의\n","\n","lr = 1e-3\n","\n","optim = Adam(model.parameters(), lr=lr)\n","\n","for epoch in range(100):\n","    for data, label in train_loader:\n","        optim.zero_grad()\n","\n","        preds = model(data.to(device))\n","\n","        loss = nn.CrossEntropyLoss()(preds, label.to(device))\n","        loss.backward()\n","        optim.step()\n","\n","    if epoch==0 or epoch%10==9:\n","        print(f'epoch {epoch+1} loss:{loss.item()}')\n","\n","# 모델 저장\n","torch.save(model.state_dict(), 'CIFAR.pth')"]},{"cell_type":"markdown","metadata":{"id":"NkJAO0Qzb8_v"},"source":["## 모델 성능 평가"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"kqODzwISb-UD"},"outputs":[],"source":["model.load_state_dict(torch.load('CIFAR.pth', map_location=device))\n","\n","num_corr = 0\n","\n","with torch.no_grad(): # 평가는 가중치를 바꿀 필요가 없으므로 기울기를 계산하지 않는다 (메모리와 계산량이 줄어드니 평가할 때 반드시 호출!)\n","    for data, label in test_loader:\n","        output = model(data.to(device))\n","        preds = output.data.max(1)[1]\n","        corr = preds.eq(label.to(device).data).sum().item()\n","        num_corr += corr\n","\n","    print(f'Accuracy : {num_corr/len(test_data)}')"]},{"cell_type":"markdown","metadata":{"id":"Y2jTV58ReD5o"},"source":["## 전이 학습 - ImageNet 데이터로 사전 학습된 VGG 모델로 CIFAR-10 학습"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EegKvDnWeLxW"},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","\n","from torchvision.models.vgg import vgg16\n","\n","device = 'cuda' if torch.cuda.is_available() else 'cup'\n","\n","# vgg16 모델 객체 생성\n","model = vgg16(pretrained=True)\n","# 분류층 정의\n","fc = nn.Sequential(\n","    nn.Linear(512*7*7, 4096),\n","    nn.ReLU(),\n","    nn.Dropout(),\n","    nn.Linear(4096, 4096),\n","    nn.ReLU(),\n","    nn.Dropout(),\n","    nn.Linear(4096,10),\n",")\n","\n","# VGG의 classifier를 덮어씀\n","model.classifier = fc\n","model.to(device)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ofU7QQNyfbpc"},"outputs":[],"source":["# 데이터 전처리와 증강\n","import tqdm\n","\n","from torchvision.datasets.cifar import CIFAR10\n","from torchvision.transforms import Compose, ToTensor, Resize\n","from torchvision.transforms import RandomHorizontalFlip, RandomCrop, Normalize\n","from torch.utils.data.dataloader import DataLoader\n","\n","from torch.optim.adam import Adam\n","\n","transforms = Compose([\n","   Resize(224),\n","   RandomCrop((224, 224), padding=4),\n","   RandomHorizontalFlip(p=0.5),\n","   ToTensor(),\n","   Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.247, 0.243, 0.261))\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Frrdl40kfkGu"},"outputs":[],"source":["# 데이터로더 정의\n","training_data = CIFAR10(root=\"./\", train=True, download=True, transform=transforms)\n","test_data = CIFAR10(root=\"./\", train=False, download=True, transform=transforms)\n","\n","train_loader = DataLoader(training_data, batch_size=32, shuffle=True)\n","test_loader = DataLoader(test_data, batch_size=32, shuffle=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qOYCowQMfomZ"},"outputs":[],"source":["# 학습 루프 정의\n","lr = 1e-4\n","optim = Adam(model.parameters(), lr=lr)\n","\n","for epoch in range(5):\n","    # 학습 로그 출력\n","   iterator = tqdm.tqdm(train_loader)\n","   for data, label in iterator:\n","       optim.zero_grad()\n","\n","       preds = model(data.to(device))\n","\n","       loss = nn.CrossEntropyLoss()(preds, label.to(device))\n","       loss.backward()\n","       optim.step()\n","\n","       # ❷ tqdm이 출력할 문자열\n","       iterator.set_description(f\"epoch : {epoch+1} loss : {loss.item()}\")\n","\n","torch.save(model.state_dict(), \"CIFAR_pretrained.pth\") # 모델 저장"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fdEeVfpSf9d0"},"outputs":[],"source":["# 모델 성능 평가\n","model.load_state_dict(torch.load(\"CIFAR_pretrained.pth\", map_location=device))\n","\n","num_corr = 0\n","\n","with torch.no_grad():\n","   for data, label in test_loader:\n","\n","       output = model(data.to(device))\n","       # max(1)은 클래스 차원에서 가장 높은 값을 반환\n","       preds = output.data.max(1)[1]\n","       corr = preds.eq(label.to(device).data).sum().item()\n","       num_corr += corr\n","\n","   print(f\"Accuracy:{num_corr/len(test_data)}\")"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyMdekX0TO5FAbymDacII8og","gpuType":"T4","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}